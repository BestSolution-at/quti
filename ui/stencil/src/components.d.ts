/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { QMenuItem, QMenuSection } from "./components/contextmenu/contextmenu";
import { LocalDate, QEvent, QEvents } from "./components/multidayview/multidayview";
export { QMenuItem, QMenuSection } from "./components/contextmenu/contextmenu";
export { LocalDate, QEvent, QEvents } from "./components/multidayview/multidayview";
export namespace Components {
    interface QutiContextMenu {
        "items": QMenuItem[] | QMenuSection[];
    }
    interface QutiMultidayView {
        /**
          * The number of days to show - defaults to 7
         */
        "days": number;
        /**
          * Array of events to show - might be encoded as a JSON-Array
         */
        "events": QEvents | string;
        /**
          * End of hour grid, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 24
         */
        "hoursMax": number;
        /**
          * Start of hour grid, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 0
         */
        "hoursMin": number;
        /**
          * The start date - defaults to start of the current week
         */
        "startDate": LocalDate;
        /**
          * End of work hours, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 17
         */
        "workingHoursMax": number;
        /**
          * Start of working hours, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 8
         */
        "workingHoursMin": number;
    }
}
export interface QutiMultidayViewCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLQutiMultidayViewElement;
}
declare global {
    interface HTMLQutiContextMenuElement extends Components.QutiContextMenu, HTMLStencilElement {
    }
    var HTMLQutiContextMenuElement: {
        prototype: HTMLQutiContextMenuElement;
        new (): HTMLQutiContextMenuElement;
    };
    interface HTMLQutiMultidayViewElementEventMap {
        "eventFocus": QEvent;
        "eventBlur": QEvent;
    }
    interface HTMLQutiMultidayViewElement extends Components.QutiMultidayView, HTMLStencilElement {
        addEventListener<K extends keyof HTMLQutiMultidayViewElementEventMap>(type: K, listener: (this: HTMLQutiMultidayViewElement, ev: QutiMultidayViewCustomEvent<HTMLQutiMultidayViewElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLQutiMultidayViewElementEventMap>(type: K, listener: (this: HTMLQutiMultidayViewElement, ev: QutiMultidayViewCustomEvent<HTMLQutiMultidayViewElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLQutiMultidayViewElement: {
        prototype: HTMLQutiMultidayViewElement;
        new (): HTMLQutiMultidayViewElement;
    };
    interface HTMLElementTagNameMap {
        "quti-context-menu": HTMLQutiContextMenuElement;
        "quti-multiday-view": HTMLQutiMultidayViewElement;
    }
}
declare namespace LocalJSX {
    interface QutiContextMenu {
        "items"?: QMenuItem[] | QMenuSection[];
    }
    interface QutiMultidayView {
        /**
          * The number of days to show - defaults to 7
         */
        "days"?: number;
        /**
          * Array of events to show - might be encoded as a JSON-Array
         */
        "events"?: QEvents | string;
        /**
          * End of hour grid, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 24
         */
        "hoursMax"?: number;
        /**
          * Start of hour grid, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 0
         */
        "hoursMin"?: number;
        /**
          * Event emitted when an event entry lost focus
         */
        "onEventBlur"?: (event: QutiMultidayViewCustomEvent<QEvent>) => void;
        /**
          * Event emitted when an event entry has gained focus
         */
        "onEventFocus"?: (event: QutiMultidayViewCustomEvent<QEvent>) => void;
        /**
          * The start date - defaults to start of the current week
         */
        "startDate"?: LocalDate;
        /**
          * End of work hours, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 17
         */
        "workingHoursMax"?: number;
        /**
          * Start of working hours, fractional digits are discarded and has to be in range of 0 - 24 - defaults to 8
         */
        "workingHoursMin"?: number;
    }
    interface IntrinsicElements {
        "quti-context-menu": QutiContextMenu;
        "quti-multiday-view": QutiMultidayView;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "quti-context-menu": LocalJSX.QutiContextMenu & JSXBase.HTMLAttributes<HTMLQutiContextMenuElement>;
            "quti-multiday-view": LocalJSX.QutiMultidayView & JSXBase.HTMLAttributes<HTMLQutiMultidayViewElement>;
        }
    }
}
