// Generated by RSD - Do not modify
import { CalendarNew } from './model/CalendarNew.ts';
import { Result, VoidType } from './_result-utils.ts';
import { InvalidArgumentError, InvalidContentError, NativeRSDError, NotFoundError, StatusRSDError } from './Errors.ts';
import { Calendar, CalendarPatch } from './model/Calendar.ts';
import { EventView } from './model/EventView.ts';

export interface CalendarService {
	create(calendar: CalendarNew): Promise<Result<string, InvalidContentError | StatusRSDError | NativeRSDError>>;
	get(key: string): Promise<Result<Calendar, NotFoundError | InvalidArgumentError | StatusRSDError | NativeRSDError>>;
	update(key: string, changes: CalendarPatch): Promise<Result<VoidType, NotFoundError | InvalidArgumentError | StatusRSDError | NativeRSDError>>;
	eventView(key: string, start: string, end: string, timezone: string, resultTimeZone?: string): Promise<Result<EventView[], NotFoundError | InvalidArgumentError | StatusRSDError | NativeRSDError>>;
}
