// Generated by RSD - Do not modify
import { checkProp, isRecord, isString, RSDError } from './_type-utils.ts';

const errorTypes = new Set(['NotFound', 'InvalidContent', 'InvalidArgument']);

export type ErrorType = 'NotFound' | 'InvalidContent' | 'InvalidArgument';

export function isRSDError(value: unknown): value is RSDError<ErrorType> {
	return (
		isRecord(value) &&
		checkProp(value, '_type', isString, errorTypes.has.bind(errorTypes))
	);
}

export type NotFoundError = RSDError<'NotFound'> & { message: string };
export type InvalidContentError = RSDError<'InvalidContent'> & { message: string };
export type InvalidArgumentError = RSDError<'InvalidArgument'> & { message: string };

export function isNotFoundError(value: unknown): value is NotFoundError {
	return (
		isRecord(value) &&
		checkProp(value, '_type', v => v === 'NotFound') &&
		checkProp(value, '_type', isString)
	);
}
export function isInvalidContentError(value: unknown): value is InvalidContentError {
	return (
		isRecord(value) &&
		checkProp(value, '_type', v => v === 'InvalidContent') &&
		checkProp(value, '_type', isString)
	);
}
export function isInvalidArgumentError(value: unknown): value is InvalidArgumentError {
	return (
		isRecord(value) &&
		checkProp(value, '_type', v => v === 'InvalidArgument') &&
		checkProp(value, '_type', isString)
	);
}
