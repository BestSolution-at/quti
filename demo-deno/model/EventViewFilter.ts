// Generated by RSD - Do not modify
import { checkOptProp, createTypedArrayGuard, isBoolean, isRecord, isString, propListValue, propValue } from '../_type-utils.ts';

export type EventViewFilter = {
	readonly owner?: string;
	readonly title?: string;
	readonly description?: string;
	readonly fullday?: boolean;
	readonly tags?: string[];
};

export function isEventViewFilter(value: unknown): value is EventViewFilter {
	return isRecord(value) &&
		checkOptProp(value, 'owner', isString) &&
		checkOptProp(value, 'title', isString) &&
		checkOptProp(value, 'description', isString) &&
		checkOptProp(value, 'fullday', isBoolean) &&
		checkOptProp(value, 'tags', createTypedArrayGuard(isString));
}

export function EventViewFilterFromJSON($value: Record<string, unknown>): EventViewFilter {
	const owner = propValue('owner', $value, isString, 'optional');
	const title = propValue('title', $value, isString, 'optional');
	const description = propValue('description', $value, isString, 'optional');
	const fullday = propValue('fullday', $value, isBoolean, 'optional');
	const tags = propListValue('tags', $value, isString, 'optional');
	return {
		owner,
		title,
		description,
		fullday,
		tags,
	};
}

export function EventViewFilterToJSON($value: EventViewFilter): Record<string, unknown> {
	const owner = $value.owner;
	const title = $value.title;
	const description = $value.description;
	const fullday = $value.fullday;
	const tags = $value.tags;

	return {
		owner,
		title,
		description,
		fullday,
		tags,
	};
}

