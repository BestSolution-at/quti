// Generated by RSD - Do not modify
package at.bestsolution.quti.client.jdkhttp.impl.dto;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;

import jakarta.json.Json;
import jakarta.json.JsonArray;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.bestsolution.quti.client.dto.EventRepeatDailyDTO;

public class EventRepeatDailyDTOImpl extends BaseDTOImpl implements EventRepeatDailyDTO {

    EventRepeatDailyDTOImpl(JsonObject data) {
        super(data);
    }

    @Override
    public short interval() {
        return DTOUtils.mapShort(data, "interval");
    }

    @Override
    public LocalDate endDate() {
        return DTOUtils.mapLocalDate(data, "endDate", null);
    }

    @Override
    public ZoneId timeZone() {
        return DTOUtils.mapLiteral(data, "timeZone", ZoneId::of);
    }

    public static EventRepeatDailyDTO of(JsonObject data) {
        return new EventRepeatDailyDTOImpl(data);
    }

    public static List<EventRepeatDailyDTO> of(JsonArray data) {
        return DTOUtils.mapObjects(data, EventRepeatDailyDTOImpl::of);
    }

    public static class BuilderImpl implements Builder {
        private JsonObjectBuilder $builder = Json.createObjectBuilder();
        public BuilderImpl() {
            $builder.add("@type", "daily");
        }
        @Override
        public Builder interval(short interval) {
            $builder.add("interval", interval);
            return this;
        }

        @Override
        public Builder endDate(LocalDate endDate) {
            if( endDate == null ) {
                return this;
            }
            $builder.add("endDate", endDate.toString());
            return this;
        }

        @Override
        public Builder timeZone(ZoneId timeZone) {
            $builder.add("timeZone", timeZone.toString());
            return this;
        }

        public EventRepeatDailyDTO build() {
            return new EventRepeatDailyDTOImpl($builder.build());
        }
    }
}
