// Generated by RSD - Do not modify
package at.bestsolution.quti.client.jdkhttp.impl.dto;

import java.util.List;

import jakarta.json.Json;
import jakarta.json.JsonArray;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.bestsolution.quti.client.dto.EventViewFilterDTO;

public class EventViewFilterDTOImpl extends BaseDTOImpl implements EventViewFilterDTO {

    EventViewFilterDTOImpl(JsonObject data) {
        super(data);
    }

    @Override
    public String owner() {
        return DTOUtils.mapString(data, "owner", null);
    }

    @Override
    public String title() {
        return DTOUtils.mapString(data, "title", null);
    }

    @Override
    public String description() {
        return DTOUtils.mapString(data, "description", null);
    }

    @Override
    public boolean fullday() {
        return DTOUtils.mapBoolean(data, "fullday", false);
    }

    @Override
    public List<String> tags() {
        return DTOUtils.mapStrings(data, "tags");
    }

    public static EventViewFilterDTO of(JsonObject data) {
        return new EventViewFilterDTOImpl(data);
    }

    public static List<EventViewFilterDTO> of(JsonArray data) {
        return DTOUtils.mapObjects(data, EventViewFilterDTOImpl::of);
    }

    public static class BuilderImpl implements Builder {
        private JsonObjectBuilder $builder = Json.createObjectBuilder();

        @Override
        public Builder owner(String owner) {
            if( owner == null ) {
                return this;
            }
            $builder.add("owner", owner);
            return this;
        }

        @Override
        public Builder title(String title) {
            if( title == null ) {
                return this;
            }
            $builder.add("title", title);
            return this;
        }

        @Override
        public Builder description(String description) {
            if( description == null ) {
                return this;
            }
            $builder.add("description", description);
            return this;
        }

        @Override
        public Builder fullday(boolean fullday) {
            $builder.add("fullday", fullday);
            return this;
        }

        @Override
        public Builder tags(List<String> tags) {
            if( tags == null ) {
                return this;
            }
            $builder.add("tags", DTOUtils.toJsonStringArray(tags));
            return this;
        }

        public EventViewFilterDTO build() {
            return new EventViewFilterDTOImpl($builder.build());
        }
    }
}
