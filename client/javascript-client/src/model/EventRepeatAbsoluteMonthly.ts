// Generated by RSD - Do not modify
import {
	checkOptProp,
	checkProp,
	createIsStringTypeGuard,
	isNull,
	isNumber,
	isRecord,
	isString,
	propValue,
} from '../_type-utils.js';

export type EventRepeatAbsoluteMonthly = {
	'@type': 'absolute-monthly';
	readonly dayOfMonth: number;
	readonly interval: number;
	readonly endDate?: string;
	readonly timeZone: string;
};

export function isEventRepeatAbsoluteMonthly(
	value: unknown,
): value is EventRepeatAbsoluteMonthly {
	return (
		isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('absolute-monthly')) &&
		checkProp(value, 'dayOfMonth', isNumber) &&
		checkProp(value, 'interval', isNumber) &&
		checkOptProp(value, 'endDate', isString) &&
		checkProp(value, 'timeZone', isString)
	);
}

export function EventRepeatAbsoluteMonthlyFromJSON(
	value: Record<string, unknown>,
): EventRepeatAbsoluteMonthly {
	const dayOfMonth = propValue('dayOfMonth', value, isNumber);
	const interval = propValue('interval', value, isNumber);
	const endDate = propValue('endDate', value, isString, 'optional');
	const timeZone = propValue('timeZone', value, isString);
	return {
		'@type': 'absolute-monthly',
		dayOfMonth,
		interval,
		endDate,
		timeZone,
	};
}

export function EventRepeatAbsoluteMonthlyToJSON(
	value: EventRepeatAbsoluteMonthly,
): Record<string, unknown> {
	const dayOfMonth = value.dayOfMonth;
	const interval = value.interval;
	const endDate = value.endDate;
	const timeZone = value.timeZone;

	return {
		'@type': 'absolute-monthly',
		dayOfMonth,
		interval,
		endDate,
		timeZone,
	};
}

export type EventRepeatAbsoluteMonthlyPatch = {
	'@type': 'absolute-monthly-patch';
	readonly dayOfMonth?: number;
	readonly interval?: number;
	readonly endDate?: string | null;
	readonly timeZone?: string;
};

export function isEventRepeatAbsoluteMonthlyPatch(
	value: unknown,
): value is EventRepeatAbsoluteMonthlyPatch {
	return (
		isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('absolute-monthly')) &&
		checkOptProp(value, 'dayOfMonth', isNumber) &&
		checkOptProp(value, 'interval', isNumber) &&
		(isNull(value.endDate) || checkOptProp(value, 'endDate', isString)) &&
		checkOptProp(value, 'timeZone', isString)
	);
}

export function EventRepeatAbsoluteMonthlyPatchFromJSON(
	value: Record<string, unknown>,
): EventRepeatAbsoluteMonthlyPatch {
	const dayOfMonth = propValue('dayOfMonth', value, isNumber, 'optional');
	const interval = propValue('interval', value, isNumber, 'optional');
	const endDate = propValue('endDate', value, isString, 'optional_null');
	const timeZone = propValue('timeZone', value, isString, 'optional');
	return {
		'@type': 'absolute-monthly-patch',
		dayOfMonth,
		interval,
		endDate,
		timeZone,
	};
}

export function EventRepeatAbsoluteMonthlyPatchToJSON(
	value: EventRepeatAbsoluteMonthlyPatch,
): Record<string, unknown> {
	const dayOfMonth = value.dayOfMonth;
	const interval = value.interval;
	const endDate = value.endDate;
	const timeZone = value.timeZone;

	return {
		'@type': 'absolute-monthly-patch',
		dayOfMonth,
		interval,
		endDate,
		timeZone,
	};
}
