// Generated by RSD - Do not modify
import {
	type EventRepeatDaily,
	EventRepeatDailyFromJSON,
	type EventRepeatDailyPatch,
	EventRepeatDailyPatchFromJSON,
	EventRepeatDailyPatchToJSON,
	EventRepeatDailyToJSON,
	isEventRepeatDaily,
	isEventRepeatDailyPatch,
} from './EventRepeatDaily.js';
import {
	type EventRepeatWeekly,
	EventRepeatWeeklyFromJSON,
	type EventRepeatWeeklyPatch,
	EventRepeatWeeklyPatchFromJSON,
	EventRepeatWeeklyPatchToJSON,
	EventRepeatWeeklyToJSON,
	isEventRepeatWeekly,
	isEventRepeatWeeklyPatch,
} from './EventRepeatWeekly.js';
import {
	type EventRepeatAbsoluteMonthly,
	EventRepeatAbsoluteMonthlyFromJSON,
	type EventRepeatAbsoluteMonthlyPatch,
	EventRepeatAbsoluteMonthlyPatchFromJSON,
	EventRepeatAbsoluteMonthlyPatchToJSON,
	EventRepeatAbsoluteMonthlyToJSON,
	isEventRepeatAbsoluteMonthly,
	isEventRepeatAbsoluteMonthlyPatch,
} from './EventRepeatAbsoluteMonthly.js';
import {
	type EventRepeatAbsoluteYearly,
	EventRepeatAbsoluteYearlyFromJSON,
	type EventRepeatAbsoluteYearlyPatch,
	EventRepeatAbsoluteYearlyPatchFromJSON,
	EventRepeatAbsoluteYearlyPatchToJSON,
	EventRepeatAbsoluteYearlyToJSON,
	isEventRepeatAbsoluteYearly,
	isEventRepeatAbsoluteYearlyPatch,
} from './EventRepeatAbsoluteYearly.js';
import {
	type EventRepeatRelativeMonthly,
	EventRepeatRelativeMonthlyFromJSON,
	type EventRepeatRelativeMonthlyPatch,
	EventRepeatRelativeMonthlyPatchFromJSON,
	EventRepeatRelativeMonthlyPatchToJSON,
	EventRepeatRelativeMonthlyToJSON,
	isEventRepeatRelativeMonthly,
	isEventRepeatRelativeMonthlyPatch,
} from './EventRepeatRelativeMonthly.js';
import {
	type EventRepeatRelativeYearly,
	EventRepeatRelativeYearlyFromJSON,
	type EventRepeatRelativeYearlyPatch,
	EventRepeatRelativeYearlyPatchFromJSON,
	EventRepeatRelativeYearlyPatchToJSON,
	EventRepeatRelativeYearlyToJSON,
	isEventRepeatRelativeYearly,
	isEventRepeatRelativeYearlyPatch,
} from './EventRepeatRelativeYearly.js';
import { isString } from '../_type-utils.js';

export type EventRepeat =
	| EventRepeatDaily
	| EventRepeatWeekly
	| EventRepeatAbsoluteMonthly
	| EventRepeatAbsoluteYearly
	| EventRepeatRelativeMonthly
	| EventRepeatRelativeYearly;

export type EventRepeatPatch =
	| EventRepeatDailyPatch
	| EventRepeatWeeklyPatch
	| EventRepeatAbsoluteMonthlyPatch
	| EventRepeatAbsoluteYearlyPatch
	| EventRepeatRelativeMonthlyPatch
	| EventRepeatRelativeYearlyPatch;

export function isEventRepeat(value: unknown) {
	return (
		isEventRepeatDaily(value) ||
		isEventRepeatWeekly(value) ||
		isEventRepeatAbsoluteMonthly(value) ||
		isEventRepeatAbsoluteYearly(value) ||
		isEventRepeatRelativeMonthly(value) ||
		isEventRepeatRelativeYearly(value)
	);
}

export function isEventRepeatPatch(value: unknown) {
	return (
		isEventRepeatDailyPatch(value) ||
		isEventRepeatWeeklyPatch(value) ||
		isEventRepeatAbsoluteMonthlyPatch(value) ||
		isEventRepeatAbsoluteYearlyPatch(value) ||
		isEventRepeatRelativeMonthlyPatch(value) ||
		isEventRepeatRelativeYearlyPatch(value)
	);
}

export function EventRepeatFromJSON(
	value: Record<string, unknown>,
): EventRepeat {
	const descriminator = value['@type'];

	if (!isString(descriminator)) {
		throw new Error('No valid descriminator found');
	}
	switch (descriminator) {
		case 'daily':
			return EventRepeatDailyFromJSON(value);
		case 'weekly':
			return EventRepeatWeeklyFromJSON(value);
		case 'absolute-monthly':
			return EventRepeatAbsoluteMonthlyFromJSON(value);
		case 'absolute-yearly':
			return EventRepeatAbsoluteYearlyFromJSON(value);
		case 'relative-monthly':
			return EventRepeatRelativeMonthlyFromJSON(value);
		case 'relative-yearly':
			return EventRepeatRelativeYearlyFromJSON(value);
		default:
			throw new Error(`Unknown descriminator "${descriminator}"`);
	}
}
export function EventRepeatToJSON(value: EventRepeat): Record<string, unknown> {
	const $desc = value['@type'];
	switch ($desc) {
		case 'daily':
			return EventRepeatDailyToJSON(value);
		case 'weekly':
			return EventRepeatWeeklyToJSON(value);
		case 'absolute-monthly':
			return EventRepeatAbsoluteMonthlyToJSON(value);
		case 'absolute-yearly':
			return EventRepeatAbsoluteYearlyToJSON(value);
		case 'relative-monthly':
			return EventRepeatRelativeMonthlyToJSON(value);
		case 'relative-yearly':
			return EventRepeatRelativeYearlyToJSON(value);
		default:
			throw new Error(`Unknown descriminator "${$desc}";`);
	}
}

export function EventRepeatPatchFromJSON(
	value: Record<string, unknown>,
): EventRepeatPatch {
	const descriminator = value['@type'];

	if (!isString(descriminator)) {
		throw new Error('No valid descriminator found');
	}
	switch (descriminator) {
		case 'patch:daily':
			return EventRepeatDailyPatchFromJSON(value);
		case 'patch:weekly':
			return EventRepeatWeeklyPatchFromJSON(value);
		case 'patch:absolute-monthly':
			return EventRepeatAbsoluteMonthlyPatchFromJSON(value);
		case 'patch:absolute-yearly':
			return EventRepeatAbsoluteYearlyPatchFromJSON(value);
		case 'patch:relative-monthly':
			return EventRepeatRelativeMonthlyPatchFromJSON(value);
		case 'patch:relative-yearly':
			return EventRepeatRelativeYearlyPatchFromJSON(value);
		default:
			throw new Error(`Unknown descriminator "${descriminator}"`);
	}
}

export function EventRepeatPatchToJSON(
	value: EventRepeatPatch,
): Record<string, unknown> {
	const $desc = value['@type'];
	switch ($desc) {
		case 'patch:daily':
			return EventRepeatDailyPatchToJSON(value);
		case 'patch:weekly':
			return EventRepeatWeeklyPatchToJSON(value);
		case 'patch:absolute-monthly':
			return EventRepeatAbsoluteMonthlyPatchToJSON(value);
		case 'patch:absolute-yearly':
			return EventRepeatAbsoluteYearlyPatchToJSON(value);
		case 'patch:relative-monthly':
			return EventRepeatRelativeMonthlyPatchToJSON(value);
		case 'patch:relative-yearly':
			return EventRepeatRelativeYearlyPatchToJSON(value);
		default:
			throw new Error(`Unknown descriminator "${$desc}";`);
	}
}
