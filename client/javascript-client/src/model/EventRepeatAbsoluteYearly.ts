// Generated by RSD - Do not modify
import { isMonth, type Month } from './Month.js';
import { checkOptProp, checkProp, createIsStringTypeGuard, isNull, isNumber, isRecord, isString, propValue } from '../_type-utils.js';

export type EventRepeatAbsoluteYearly = {
	'@type': 'absolute-yearly',
	readonly dayOfMonth: number;
	readonly month: Month;
	readonly interval: number;
	readonly endDate?: string;
	readonly timeZone: string;
};

export function isEventRepeatAbsoluteYearly(value: unknown): value is EventRepeatAbsoluteYearly {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('absolute-yearly')) &&
		checkProp(value, 'dayOfMonth', isNumber) &&
		checkProp(value, 'month', isMonth) &&
		checkProp(value, 'interval', isNumber) &&
		checkOptProp(value, 'endDate', isString) &&
		checkProp(value, 'timeZone', isString);
}

export function EventRepeatAbsoluteYearlyFromJSON($value: Record<string, unknown>): EventRepeatAbsoluteYearly {
	const dayOfMonth = propValue('dayOfMonth', $value, isNumber);
	const month = propValue('month', $value, isMonth);
	const interval = propValue('interval', $value, isNumber);
	const endDate = propValue('endDate', $value, isString, 'optional');
	const timeZone = propValue('timeZone', $value, isString);
	return {
		'@type': 'absolute-yearly',
		dayOfMonth,
		month,
		interval,
		endDate,
		timeZone,
	};
}

export function EventRepeatAbsoluteYearlyToJSON($value: EventRepeatAbsoluteYearly): Record<string, unknown> {
	const dayOfMonth = $value.dayOfMonth;
	const month = $value.month;
	const interval = $value.interval;
	const endDate = $value.endDate;
	const timeZone = $value.timeZone;

	return {
		'@type': 'absolute-yearly',
		dayOfMonth,
		month,
		interval,
		endDate,
		timeZone,
	};
}

export type EventRepeatAbsoluteYearlyPatch = {
	'@type': 'absolute-yearly-patch',
	readonly dayOfMonth?: number;
	readonly month?: Month;
	readonly interval?: number;
	readonly endDate?: string | null;
	readonly timeZone?: string;
};

export function isEventRepeatAbsoluteYearlyPatch(value: unknown): value is EventRepeatAbsoluteYearlyPatch {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('absolute-yearly')) &&
		 &&
		checkOptProp(value, 'dayOfMonth', isNumber) &&
		checkOptProp(value, 'month', isMonth) &&
		checkOptProp(value, 'interval', isNumber) &&
		(isNull(value.endDate) || checkOptProp(value, 'endDate', isString)) &&
		checkOptProp(value, 'timeZone', isString);
}

export function EventRepeatAbsoluteYearlyPatchFromJSON($value: Record<string, unknown>): EventRepeatAbsoluteYearlyPatch {
	const dayOfMonth = propValue('dayOfMonth', $value, isNumber, 'optional');
	const month = propValue('month', $value, isMonth, 'optional');
	const interval = propValue('interval', $value, isNumber, 'optional');
	const endDate = propValue('endDate', $value, isString, 'optional_null');
	const timeZone = propValue('timeZone', $value, isString, 'optional');
	return {
		'@type': 'absolute-yearly-patch',
		dayOfMonth,
		month,
		interval,
		endDate,
		timeZone,
	};
}

export function EventRepeatAbsoluteYearlyPatchToJSON($value: EventRepeatAbsoluteYearlyPatch): Record<string, unknown> {
	const dayOfMonth = $value.dayOfMonth;
	const month = $value.month;
	const interval = $value.interval;
	const endDate = $value.endDate;
	const timeZone = $value.timeZone;

	return {
		'@type': 'absolute-yearly-patch',
		dayOfMonth,
		month,
		interval,
		endDate,
		timeZone,
	};
}

