FROM docker.io/azul/zulu-openjdk-debian:17-jre-headless

# Open Container Initiative (OCI) annotations
# https://github.com/opencontainers/image-spec/blob/v1.0.2/annotations.md#pre-defined-annotation-keys
LABEL org.opencontainers.image.title="Qutime"
LABEL org.opencontainers.image.description="Quarkus based backend server for Qutime"
LABEL org.opencontainers.image.authors="BestSolution.at"
LABEL org.opencontainers.image.vendor="BestSolution.at"
LABEL org.opencontainers.image.url="https://gitlab.bestsolution.at/BestSolution.at/qutime"
LABEL org.opencontainers.image.source="https://gitlab.bestsolution.at/BestSolution.at/qutime/-/tree/main/server/"

# Add a user so the container doesn't run as root
RUN adduser --system --home /deployments --uid 1001 --ingroup root --disabled-password quarkus
WORKDIR /deployments

# ensure the container runs correctly as arbitrary non-root user, e.g. in OpenShift
RUN chgrp -R 0 /deployments && \
    chmod -R g=u /deployments
# switch to the user created above
USER 1001

# create four distinct layers and copy libraries first, so if there are application changes 
# the library layers can be re-used
# (ordered as per 'official' Dockerfiles generated by Quarkus)
COPY --chown=quarkus:root target/quarkus-app/lib/ /deployments/lib/
COPY --chown=quarkus:root target/quarkus-app/*.jar /deployments/
COPY --chown=quarkus:root target/quarkus-app/app/ /deployments/app/
COPY --chown=quarkus:root target/quarkus-app/quarkus/ /deployments/quarkus/

# document which port should be exposed
EXPOSE 8080

# define the default start command with the System Properties needed
CMD ["java", "-Dquarkus.http.host=0.0.0.0", "-Djava.util.logging.manager=org.jboss.logmanager.LogManager", "-jar", "quarkus-run.jar"]
