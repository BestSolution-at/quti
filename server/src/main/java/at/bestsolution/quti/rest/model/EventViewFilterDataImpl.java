// Generated by RSD - Do not modify
package at.bestsolution.quti.rest.model;

import java.util.List;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.bestsolution.quti.service.model.EventViewFilter;

public class EventViewFilterDataImpl extends _BaseDataImpl implements EventViewFilter.Data {
	EventViewFilterDataImpl(JsonObject data) {
		super(data);
	}

	public String owner() {
		return _JsonUtils.mapString(data, "owner", null);
	}

	public String title() {
		return _JsonUtils.mapString(data, "title", null);
	}

	public String description() {
		return _JsonUtils.mapString(data, "description", null);
	}

	public boolean fullday() {
		return _JsonUtils.mapBoolean(data, "fullday", false);
	}

	public List<String> tags() {
		return _JsonUtils.mapStrings(data, "tags");
	}

	public static EventViewFilter.Data of(JsonObject obj) {
		return new EventViewFilterDataImpl(obj);
	}

	public String toString() {
		return getClass().getSimpleName();
	}

	public static class DataBuilderImpl implements EventViewFilter.DataBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public EventViewFilter.DataBuilder owner(String owner) {
			if (owner == null) {
				return this;
			}
			$builder.add("owner", owner);
			return this;
		}

		public EventViewFilter.DataBuilder title(String title) {
			if (title == null) {
				return this;
			}
			$builder.add("title", title);
			return this;
		}

		public EventViewFilter.DataBuilder description(String description) {
			if (description == null) {
				return this;
			}
			$builder.add("description", description);
			return this;
		}

		public EventViewFilter.DataBuilder fullday(boolean fullday) {
			$builder.add("fullday", fullday);
			return this;
		}

		public EventViewFilter.DataBuilder tags(List<String> tags) {
			if (tags == null) {
				return this;
			}
			$builder.add("tags", _JsonUtils.toJsonStringArray(tags));
			return this;
		}

		public EventViewFilter.Data build() {
			return new EventViewFilterDataImpl($builder.build());
		}
	}

	public static EventViewFilter.DataBuilder builder() {
		return new DataBuilderImpl();
	}
}
